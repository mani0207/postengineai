<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>postEngineAI â€” Real Demo</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    :root{--ig-grad:linear-gradient(90deg,#F58529,#DD2A7B,#8134AF)}
    .ig-gradient{background-image:var(--ig-grad)}
    .chip{background:#0e141b;border:1px solid #1b2430;color:#dbe4ff;padding:.35rem .7rem;border-radius:.8rem;font-size:.9rem}
    .cap-card{background:#0e141b;border:1px solid #1b2430;border-radius:1rem;padding:1rem;color:#e5e7eb}
    .cap-actions button{background:#101826;border:1px solid #1b2430;color:#dbe4ff;padding:.45rem .7rem;border-radius:.7rem;font-size:.85rem}
    .glass{background:rgba(255,255,255,.08);backdrop-filter:blur(8px);-webkit-backdrop-filter:blur(8px)}
  </style>
</head>
<body class="bg-slate-950 text-white">
  <header class="sticky top-0 z-40 border-b border-white/10 glass">
    <div class="max-w-5xl mx-auto px-4 h-14 flex items-center justify-between">
      <a href="/" class="flex items-center gap-2">
        <img src="/header-logo-tight.png" alt="postEngineAI" class="h-8 w-auto">
        <span class="font-semibold text-lg bg-gradient-to-r from-[#F58529] via-[#DD2A7B] to-[#8134AF] bg-clip-text text-transparent">postEngineAI</span>
      </a>
      <a href="/#pricing" class="text-sm underline">Pricing</a>
    </div>
  </header>

  <section class="ig-gradient">
    <div class="max-w-5xl mx-auto px-4 py-14">
      <h1 class="text-3xl sm:text-4xl font-bold">Real demo â€” powered by ChatGPT</h1>
      <p class="mt-2 text-slate-100">You have 20 free captions. Each generation uses 4 credits.</p>

      <div class="mt-5 text-sm bg-black/30 border border-white/10 rounded-xl px-3 py-2 inline-flex items-center gap-2">
        <span>Credits left:</span> <span id="credits">â€”</span>
      </div>

      <div class="mt-6 p-6 rounded-2xl border border-white/10 glass">
        <label class="block text-sm opacity-90">Describe your niche or post idea</label>
        <input id="topic" class="mt-2 w-full rounded-xl bg-black/30 border border-white/10 px-4 py-3 outline-none focus:ring-2 focus:ring-white/40" placeholder="e.g., pet grooming tips, morning workout motivation" />
        
        <div class="mt-3 flex items-center gap-3">
          <input id="img" type="file" accept="image/*" class="text-sm">
          <span class="opacity-80 text-sm">Optional: upload an image to tailor the caption</span>
        </div>

        <div class="flex flex-wrap gap-2 mt-3">
          <button class="chip">Pet grooming tips</button>
          <button class="chip">Morning workout motivation</button>
          <button class="chip">Homemade pizza reel</button>
          <button class="chip">Salon promo for summer</button>
        </div>

        <div class="mt-5 flex items-center gap-3">
          <button id="go" class="rounded-xl bg-white text-black px-4 py-2 font-medium hover:opacity-90">Generate</button>
          <span id="hint" class="opacity-80 text-sm"></span>
        </div>

        <div id="preview" class="mt-4"></div>
        <div id="out" class="mt-6 grid gap-4"></div>
      </div>
    </div>
  </section>

  <script>
    const C_KEY='pe_anon', CR_KEY='pe_trial_credits';
    function setCookie(k,v,days){const d=new Date();d.setTime(d.getTime()+days*864e5);document.cookie=k+'='+encodeURIComponent(v)+';expires='+d.toUTCString()+';path=/;SameSite=Lax';}
    function getCookie(k){return document.cookie.split(';').map(s=>s.trim()).filter(Boolean).reduce((a,p)=>{const[i,...r]=p.split('=');a[i]=decodeURIComponent(r.join('='));return a;}, {})[k];}
    if(!getCookie(C_KEY)){ setCookie(C_KEY, (crypto.randomUUID?crypto.randomUUID():String(Math.random()).slice(2)), 365); }
    if(localStorage.getItem(CR_KEY)===null){ localStorage.setItem(CR_KEY,'20'); }

    const creditsEl = document.getElementById('credits');
    const topic = document.getElementById('topic');
    const img = document.getElementById('img');
    const go = document.getElementById('go');
    const hint = document.getElementById('hint');
    const out = document.getElementById('out');
    const preview = document.getElementById('preview');
    document.querySelectorAll('.chip').forEach(b=>b.addEventListener('click',()=>{ topic.value=b.textContent; }));

    function getCredits(){ return parseInt(localStorage.getItem(CR_KEY)||'0',10); }
    function setCredits(n){ localStorage.setItem(CR_KEY,String(Math.max(0,n))); renderCredits(); }
    function renderCredits(){ creditsEl.textContent = getCredits(); }
    renderCredits();

    img.addEventListener('change', ()=>{
      out.innerHTML=''; preview.innerHTML='';
      const file = img.files?.[0]; if(!file) return;
      const url = URL.createObjectURL(file);
      const el = document.createElement('img'); el.src = url; el.className='mt-2 h-32 rounded-lg border border-white/10 object-cover';
      preview.appendChild(el);
    });

    async function fileToDataUrl(file){
      return new Promise((resolve,reject)=>{
        const r = new FileReader();
        r.onload = () => resolve(r.result);
        r.onerror = reject;
        r.readAsDataURL(file);
      });
    }

    go.addEventListener('click', async ()=>{
      out.innerHTML=''; hint.textContent='Generatingâ€¦';
      let imageDataUrl = '';
      const file = img.files?.[0];
      if (file) imageDataUrl = await fileToDataUrl(file);
      try{
        const res = await fetch('/api/generate', {
          method:'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ prompt: topic.value, imageDataUrl })
        });
        if (res.status === 402) {
          const j = await res.json();
          hint.textContent = 'Free credits used up. Please upgrade.';
          setCredits(j.remaining ?? getCredits());
          return;
        }
        const j = await res.json();
        if (!res.ok) throw new Error(j.error || 'Server error');
        setCredits(j.remaining ?? getCredits()); // server may control
        (j.captions||[]).forEach(text=>{
          const card=document.createElement('div'); card.className='cap-card';
          const pre=document.createElement('pre'); pre.style.whiteSpace='pre-wrap'; pre.style.margin='0 0 .75rem 0'; pre.textContent=text;
          const actions=document.createElement('div'); actions.className='cap-actions flex gap-2';
          const copy=document.createElement('button'); copy.textContent='ðŸ“‹ Copy';
          copy.onclick=async()=>{await navigator.clipboard.writeText(text);copy.textContent='âœ… Copied';setTimeout(()=>copy.textContent='ðŸ“‹ Copy',1200);};
          const share=document.createElement('button'); share.textContent='ðŸ“¤ Share'; share.onclick=()=>{ const u='https://wa.me/?text='+encodeURIComponent(text); window.open(u,'_blank','noopener'); };
          actions.appendChild(copy); actions.appendChild(share);
          card.appendChild(pre); card.appendChild(actions);
          out.appendChild(card);
        });
        hint.textContent='';
      }catch(e){
        hint.textContent='Error: '+e.message;
      }
    });
  </script>
</body>
</html>
